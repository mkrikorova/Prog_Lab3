@startuml

enum Characteristic {
    -{static}SHAPELESS
    -{static}TORN
    -{static}SOMEONE
    --
    -title : String
    --
    +getTitle()
}

interface ICook {
    +bake(Oven oven, String product)
    +stew(Oven oven, String product)
    +fry(Oven oven, String product)
}

interface IDry {
    +wet()
    +dry()
    +dryOn(Dryer place)
}

interface IWalk {
    +streetWalk()
}
note top of IWalk
   Это для анонимного класса
   вызывается из main, чтобы
   коротышки ходили по улице
end note

class Cloth {
    -type : Characteristic
    -rateSoak : double // 0 - сухой, 1 - мокрый
    -dryerPlace : Dryer
    --
    + Cloth(double rateSoak)
    ..
    +setCharacteristic(Characteristic  characteristic)
    +getCharacteristic() : Characteristic
    +wet()
    +dry()
    +dryOn(Dryer place)
}

class Shorty {
    -name : String
    -age : int
    -gender : boolean // 1 - жен, 0 - муж
    +outfit[] : Cloth
    -location : Room
    -weight : double

    -sleepingMode : boolean // 0 - спит, 1 - бодрствует
    -health : String // самочувствие
    --
    +Shorty(String name, int age, boolean gender, double weight)
    +Shorty(String name, int age, boolean gender, double weight, String health)
    ..
    +getName()
    +setName()
    +move(Room room)
    +setLocation(Room room)
    +putOnCloth(Cloth item)
    +removeCloth(Cloth item)
    +bake(String product)
    +stew(String product)
    +fry(String product)

    +lieDown(Shelve shelve)
    +standUp(Shelve shelve)
    +fallAsleep()
    +wakeUp()
    +setHealth(String health)
    +getHealth() : String
}

class Room {
    -name : String
    -wall1 : Wall
    -wall2 : Wall
    -wall3 : Wall
    -wall4 : Wall
    -ceiling : Ceiling
    -floor : Floor
    -pipe : Dryer
    -rope : Dryer
    -oven : Oven
    -volume : String
    +visitors[] : Shorty
    --
    + Room (String name, String volume)
    + Room (String name, String volume, Shorty[])
    ..
    +getName()
    +setName()
    +addVisitor(Shorty shorty)
    +removeVisitor(Shorty shorty)
    +countVisitors() : int
    +addPipe(String material, String size, int temperature)
    +addRope(int length, String material, int temperature)
    +addOven(String material)
    +getRoomFloor()
    +getRoomCeiling()
    +getRoomElements()
}

class Wall {
    +shelves[] : Shelve
    +bulbs[] : Bulb
    --
    +Wall()
    ..
    +addBulb(Bulb bulb)
    +removeBulb(Bulb bulb)
    +countBulb() : int
    +addShelve(Shelve shelve)
    +removeShelve(Shelve shelve)
    +countShelve() : int
    +addPeople(int index, Shorty shorty)
    +getWall() :String
}

class Ceiling {
    -height : String
    -status : String  //насколько ему плохо
    +bulbs[] : Bulb
    --
    +Ceiling(String height, String status)
    ..
    +addBulb(Bulb bulb)
    +removeBulb(Bulb bulb)
    +countBulb() : int
    +getBulb (int index) : String
}
class Floor {
    -material : String
    --
    +Floor(String material)
    ..
    +getMaterial() : String
}
class Shelve {
    -material : String
    -status : String
    -number : int
    -mattress : String
    -pillow : String
    +people[] : Shorty
    --
    +Shelve(String material, String status)
    ..
    +addPeople(Shorty shorty)
    +removePeople(Shorty shorty)
    +countPeople()
    +getPeople() : ArrayList
    +getShelve() : String
}

class Oven {
    -material : String
    --
    +Oven(String material)
    ..
    +getMaterial() : String
}
abstract Dryer {
    -temperature : int
    +clothes[] : Cloth
    --
    +Dryer(int temperature)
    ..
    +getTemperature() : String
    +setTemperature(String temperature)
    +addCloth(Cloth item)
    +removeCloth(Cloth item)
    +countCloth()
    +getDryerType() : String
}
class Rope {
    -length : int
    -material : String
    -temperature : int
    --
    +Rope(int temperature, String material, int thickness)
    ..
    +getRopeType() : String
}
class Pipe {
    -material : String
    -size : String
    -temperature : int
    +Pipe(String material, String size, int temperature)

}

class Bulb {
    -brightness : String
    --
    +Bulb(String brightness)
    ..
    +getBrightness() : String
}

class House {
    -condition : String
    -rooms[] : Room
    +visitors[] : Shorty
    +getSignboard() : String
    +setSignboard(String newSignboard)
    +addVisitor(Shorty shorty)
    +removeVisitor(Shorty shorty)
    +countVisitors() : int
    +addRoom(Room room)
    +removeRoom(Room room)
    +countRoom() : int
}

static class Signboard {
    -name : String
    +getName() : String
    +setName(String newName)
}
note left of Signboard
   Это статический класс
end note

class NegativeNumberException
note right of NegativeNumberException
   Это unchecked исключение
end note

class TryZeroRoomsException
note left of TryZeroRoomsException
   Это checked исключение
end note

class CorrectName {
    +Checkname(String newName) : boolean
}
note top of CorrectName
   Это локальный класс
   используется для проверки имени
end note



skinparam groupInheritance 1
Shorty::Shorty .right.> NegativeNumberException : Throws
House::removeRoom .left.> TryZeroRoomsException : Throws
Cloth -up-> Characteristic
ICook <|.. Shorty
Room -up-* House
IWalk <|.. Shorty
House *-- Signboard
Room <-- Shorty
Room *-- Ceiling
Room *-- Wall
Room *-- Floor
Wall o-- Shelve
Room o-- Oven
Ceiling o-- Bulb
Wall o-- Bulb
Room o-- Dryer
Dryer <|-- Pipe
Dryer <|-- Rope
Shorty::setName <-left- CorrectName


Cloth --o Shorty

IDry <|.. Cloth
@enduml

